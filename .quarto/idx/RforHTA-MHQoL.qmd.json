{"title":"Measuring Mental Health Quality of Life in R: A Psychometric Evaluation and Standardised MHQoL Toolbox","markdown":{"yaml":{"title":"Measuring Mental Health Quality of Life in R: A Psychometric Evaluation and Standardised MHQoL Toolbox","format":{"revealjs":{"logo":"data/eshpm-logo.jpg","scrollable":true,"highlight-style":"github","slide-number":true,"incremental":true,"transition":"fade","chalkboard":true,"center":true}},"editor":"visual","css":"styles.css"},"headingText":"🧠 Why Standardised Scoring and Psychometric Evaluation Matter","containsRefs":false,"markdown":"\n\n\n-   ✅ Validated health instruments (like **MHQoL**) are essential in health research\n-   ❌ Manual scoring is **error-prone** and inefficient\n-   Psychometric evaluation ensures:\n    -   Internal consistency\n    -   Validity (construct & convergent)\n-   ⚙️ R enables:\n    -   **Automated scoring**\n    -   **Reproducible evaluation**\n\n## 📦 What this Project Delivers\n\n-   📊 **Psychometric analysis workflow** in R\n-   Custom **R package** for:\n    -   MHQoL score recalculation\n    -   Consistent scoring logic\n-   🌐 Interactive **Shiny App** for:\n    -   User-friendly input\n    -   Automated results & visualisation\n-   🔁 Fully reproducible pipeline\n\n## ♻️ Integrated Workflow: From Data to Results\n\n1.  📄 **Collect MHQoL Responses**\n2.  ⚙️ **Recalculate Scores Using R Package or Shiny App**\n3.  🖥️ **Use Shiny App for Visual Summary**\n4.  📈 **Run Psychometric Analysis in R**\n5.  📝 **Interpret and Report Results**\n\n## ⚙️ Recalculate Scores Using R Package or Shiny App\n\n::: columns\n::: {.column width=\"50%\"}\n📦 R Package\n\n<iframe src=\"https://cran.r-project.org/web/packages/MHQoL/MHQoL.pdf\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n:::\n\n::: {.column width=\"50%\"}\n💻 Shiny interface\n\n<iframe src=\"https://stijnbpeeters.shinyapps.io/MHQoL-Tool/\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n:::\n:::\n\n## ⚙️ Recalculate Scores Using the MHQoL Package\n\n-   🗂️ Contains 8 function, **highlight two**:\n    -   `mhqol()`\n    -   `mhqol_LSS()`\n-   📑 One dataframe:\n    -   `mhqol_valueset()`\n-   🖥️ Shiny Tool is integrated in the package\n    -   `shiny_mhqol()`\n\n## ⚙️\n\n```{r}\n#| echo: false \nlibrary(readxl)\nlibrary(tidyverse)\n\nexample_data_scores <-  readxl::read_excel(\"data/example_data_scores.xlsx\") %>%\nselect(-...1)\n\nexample_data_text <- readxl::read_excel(\"data/example_data_text.xlsx\") %>%\nselect(-...1)\n```\n\n::: columns\n::: {.column width=\"50%\"}\n### 🧮 Input in Scores\n\n```{r}\n#| echo: false\n\nlibrary(knitr)\nlibrary(kableExtra)\n\nkable(head(example_data_scores), format = \"html\") %>%\n  kable_styling(\n    font_size = 16,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  ) %>%\nscroll_box()\n```\n:::\n\n::: {.column width=\"50%\"}\n### 📝 Input in Text\n\n```{r}\n#| echo: false\n\nkable(head(example_data_text), format = \"html\") %>%\n  kable_styling(\n    font_size = 16,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  ) %>%\nscroll_box()\n```\n:::\n:::\n\n## Which to use? 🤔\n\nBoth! 🥳\n\n## Example - Output in utilities?🤔\n\n::: columns\n::: {.column width=\"60%\"}\n```{r}\n#| echo: true\n#| eval: true\n\nlibrary(MHQoL)\n\n# Prepare input: 7 MHQoL dimensions\ndimensions <- example_data_scores[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")]\n\n# Calculate total utility score (Netherlands value set)\nmhqol_utility <- mhqol(\n  dimensions = dimensions,\n  country = \"Netherlands\",   # 🇳🇱 Default option\n  metric = \"total\",          # \"total\" or \"average\"\n  ignore_invalid = TRUE,     # Skip incomplete rows\n  ignore_NA = FALSE          # Stop if NAs are present\n)\n\n```\n:::\n\n::: {.column width=\"40%\"}\n```{r}\n#| echo: false\nlibrary(kableExtra)\n\nkable(head(mhqol_utility), format = \"html\") %>%\n  kable_styling(\n    font_size = 18,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  )\n```\n:::\n:::\n\n## Example - Output in scores?🤔\n\n::: columns\n::: {.column width=\"60%\"}\n```{r}\n#| echo: true\n#| eval: true\n\nlibrary(MHQoL)\n\n# Prepare input: 7 MHQoL dimensions\ndimensions <- example_data_text[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")] #Input from the text dataframe\n\n# Calculate total utility score (Netherlands value set)\nmhqol_LSS <- mhqol_LSS(\n  dimensions = dimensions,\n  metric = \"total\",          # \"total\" or \"average\"\n  ignore_invalid = TRUE,     # Skip incomplete rows\n  ignore_NA = FALSE          # Stop if NAs are present\n)\n\n```\n:::\n\n::: {.column width=\"40%\"}\n```{r}\n#| echo: false\nlibrary(kableExtra)\n\nkable(head(mhqol_LSS), format = \"html\") %>%\n  kable_styling(\n    font_size = 18,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  )\n```\n:::\n:::\n\n## Or if you want to have use an Interface (from Shiny): the MHQoL cooker👩‍🍳\n\n<iframe src=\"https://stijnbpeeters.shinyapps.io/MHQoL-Tool/\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n\n::: :::\n\n## 📈 The actual work starts: run the Psychometric Analysis in R\n\n::: columns\n::: {.column width=\"65%\"}\n1.  **Internal Consistency**\n    -   Cronbach’s Alpha\n2.  **Construct Validity**\n    -   Measurement invariance test\n    -   Spearman’s Rank Correlation Coefficients\n    -   Multilevel Regression Analyses\n3.  **Convergent Validity**\n    -   Spearman’s Rank Correlation Coefficients\n:::\n\n::: {.column width=\"35%\"}\n![](https://preview.redd.it/starting-a-new-hobby-v0-2dnsyjxmd3qa1.png?width=640&crop=smart&auto=webp&s=bbd84f2849b718c8901cdb628d9c47fa59ee892f)\n:::\n:::\n\n## Internal Consistency using the `ltm` package\n\n::: columns\n::: {.column width=\"40%\"}\n**⚙️ How We Used It**\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(ltm)\n\n# Select MHQoL dimensions (7 items)\ndimensions <- example_data_scores[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")]\n\n# Compute Cronbach’s Alpha\ncronbach.alpha(dimensions)\n```\n:::\n\n::: {.column width=\"60%\"}\n**🧠 Why we used it?**\n\n-   Simple and **dedicated function** for Cronbach’s Alpha\n-   Integrated in a package already suited for **psychometric analysis**\n-   Output includes:\n    -   Overall alpha\n    -   **Item-total correlations**\n    -   Effect of removing each item\n-   Ideal for Likert-style or binary questionnaire items\n-   Lightweight and easy to interpret — perfect for streamlined reporting\n:::\n:::\n\n## 🔍 Measurement invariance - Why Test Measurement Invariance?\n\n::: columns\n::: {.column width=\"55%\"}\n...\n\n**🧠 Purpose**\n\n-   Ensure **MHQoL measures the same construct** across groups\\\n-   Without it, **comparisons may be biased or invalid** ...\n\n**🔬 Invariance Levels**\n\n1.  **Configural**: Same structure\\\n2.  **Metric**: Equal loadings\\\n3.  **Scalar**: Equal loadings + intercepts\\\n4.  *(Optional)* **Residual**: Equal residual variances\n:::\n\n::: {.column width=\"45%\"}\n![](https://okan.cloud/posts/2020-12-21-testing-for-measurement-invariance-in-r/mi2.jpg)\n:::\n:::\n\n-   Each step **adds constraints** and tests whether the model still fits well.\n\n## ✅ Sow we Tested it in R (lavaan)\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(lavaan)\n\n# Latent model: 1 factor with 7 observed MHQoL items\nmodel <- '\n  MHQoL =~ SI + IN + MO + RE + DA + PH + FU\n'\n\n# 1. Configural invariance\nfit_config <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE)\n\n# 2. Metric invariance (equal loadings)\nfit_metric <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = \"loadings\")\n\n# 3. Scalar invariance (equal loadings + intercepts)\nfit_scalar <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = c(\"loadings\", \"intercepts\"))\n\n# Compare model fits\nanova(fit_config, fit_metric, fit_scalar)\n```\n\n## 📊 Comparing Invariance Models\n\n| Model          | CFI  | RMSEA | SRMR |\n|----------------|------|-------|------|\n| Configural     | 0.99 | 0.04  | 0.06 |\n| Metric         | 0.99 | 0.04  | 0.07 |\n| Scalar         | 0.96 | 0.10  | 0.07 |\n| Partial scalar | 0.99 | 0.03  | 0.06 |\n\nPartial scalar: free some intercepts, for example\n\n```{r}\n#| echo: true\n#| eval: false\n\nfit_part_scalar <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = c(\"loadings\", C(\"SI|T1\", \"IN|T2\")))\n\n```\n\n## 🔗 Spearman’s Rank Correlation Coefficients\n\n::: columns\n::: {.column width=\"55%\"}\n**🧠 Purpose**\n\n-   Assess **convergent validity** between MHQoL and related health measures\n-   **Spearman’s rank correlation** is:\n    -   Non-parametric\n    -   Based on **ranked values**\n    -   Ideal for **ordinal** or **non-normal** data\n:::\n\n::: {.column width=\"45%\"}\n-   ✅ In R, correlation methods are available with `cor.test()` (also for pearson)\n\n...\n\n📌 Example Use Cases: MHQoL vs. EQ-5D\n\n```{r}\n#| echo: true\n#| eval: false\n\n\n# Pearson\ncor.test(x = mhqol_score, y = eq5d_score, method = \"pearson\")\n\n# Spearman\ncor.test(x = mhqol_score, y = eq5d_score, method = \"spearman\")\n```\n:::\n:::\n\n## 📊 Example output correlations with MHQoL Score\n\n| Variable           | Spearman’s ρ | p-value  |\n|--------------------|--------------|----------|\n| EQ-5D LSS          | 0.62         | \\< 0.001 |\n| WHO-5 Wellbeing    | 0.58         | \\< 0.001 |\n| PHQ-9 (depression) | -0.55        | \\< 0.001 |\n\n## Last step👣: Multilevel regression\n\n::: columns\n::: {.column width=\"55%\"}\n**🌍 Data Structure**\n\n-   Individuals are **nested within countries**\\\n-   Ignoring this would violate **independence assumptions**\n\n...\n\n**🎯 Research Questions**\n\n1.  Do MHQoL dimensions predict **self-reported mental QoL (MHQoL-VAS)?**\n2.  Do EQ-5D-5L dimensions explain **mental QoL differences**?\n\n...\n\n**📐 Methodological Approach**\n\n-   Used **multilevel regression** to account for hierarchy\\\n-   Included:\n    -   Fixed effects for predictors\n    -   Covariates: **age** and **gender** (*sex assigned at birth*)\n:::\n\n::: {.column width=\"45%\"}\n...\n\n**🧪 Compared two model types:**\n\n1.  **Random Intercept Model**\\\n    – Intercepts vary across countries\n\n2.  **Random Intercept + Slope Model**\\\n    – Both intercepts and slopes vary across countries\n\n...\n\n**✅** Likelihood ratio test\\*\\* favored **random intercept only**\n:::\n:::\n\n## How it was done in R\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(lme4)\n\n# Random intercept model: MHQoL dimensions → MHQoL-VAS\nmodel1 <- lmer(\n  mhqol_vas ~ SI + IN + MO + RE + DA + PH + FU +\n  age + gender + (1 | country),\n  data = example_data_scores\n)\n\n# Random intercept + slope model (example: FU varies by country)\nmodel2 <- lmer(\n  mhqol_vas ~ SI + IN + MO + RE + DA + PH + FU +\n  age + gender + (FU | country),\n  data = example_data_scores\n)\n\n# Compare models\nanova(model1, model2)\n\n# Model performance\nsummary(model1)\n```\n\n## ✅ Key Takeaways\n\n-   🧠 **R provides a complete psychometric workflow**, from internal consistency to measurement invariance and multilevel modeling\n\n-   📦 We used specialized packages:\n\n    -   `ltm` for **Cronbach’s Alpha**\n    -   `lavaan` for **Confirmatory Factor Analysis** and **Measurement Invariance**\n    -   `lme4` for **Multilevel Regression**\n\n-   🧰 We developed the **MHQoL R package** and **Shiny app**:\n\n    -   Standardized scoring\n    -   Enhances **reproducibility** and **ease of use**\n\n-   🎯 Together, these tools support both **rigorous evaluation** and **practical implementation** of mental health QoL measures\n\n## Any Questions?\n","srcMarkdownNoYaml":"\n\n## 🧠 Why Standardised Scoring and Psychometric Evaluation Matter\n\n-   ✅ Validated health instruments (like **MHQoL**) are essential in health research\n-   ❌ Manual scoring is **error-prone** and inefficient\n-   Psychometric evaluation ensures:\n    -   Internal consistency\n    -   Validity (construct & convergent)\n-   ⚙️ R enables:\n    -   **Automated scoring**\n    -   **Reproducible evaluation**\n\n## 📦 What this Project Delivers\n\n-   📊 **Psychometric analysis workflow** in R\n-   Custom **R package** for:\n    -   MHQoL score recalculation\n    -   Consistent scoring logic\n-   🌐 Interactive **Shiny App** for:\n    -   User-friendly input\n    -   Automated results & visualisation\n-   🔁 Fully reproducible pipeline\n\n## ♻️ Integrated Workflow: From Data to Results\n\n1.  📄 **Collect MHQoL Responses**\n2.  ⚙️ **Recalculate Scores Using R Package or Shiny App**\n3.  🖥️ **Use Shiny App for Visual Summary**\n4.  📈 **Run Psychometric Analysis in R**\n5.  📝 **Interpret and Report Results**\n\n## ⚙️ Recalculate Scores Using R Package or Shiny App\n\n::: columns\n::: {.column width=\"50%\"}\n📦 R Package\n\n<iframe src=\"https://cran.r-project.org/web/packages/MHQoL/MHQoL.pdf\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n:::\n\n::: {.column width=\"50%\"}\n💻 Shiny interface\n\n<iframe src=\"https://stijnbpeeters.shinyapps.io/MHQoL-Tool/\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n:::\n:::\n\n## ⚙️ Recalculate Scores Using the MHQoL Package\n\n-   🗂️ Contains 8 function, **highlight two**:\n    -   `mhqol()`\n    -   `mhqol_LSS()`\n-   📑 One dataframe:\n    -   `mhqol_valueset()`\n-   🖥️ Shiny Tool is integrated in the package\n    -   `shiny_mhqol()`\n\n## ⚙️\n\n```{r}\n#| echo: false \nlibrary(readxl)\nlibrary(tidyverse)\n\nexample_data_scores <-  readxl::read_excel(\"data/example_data_scores.xlsx\") %>%\nselect(-...1)\n\nexample_data_text <- readxl::read_excel(\"data/example_data_text.xlsx\") %>%\nselect(-...1)\n```\n\n::: columns\n::: {.column width=\"50%\"}\n### 🧮 Input in Scores\n\n```{r}\n#| echo: false\n\nlibrary(knitr)\nlibrary(kableExtra)\n\nkable(head(example_data_scores), format = \"html\") %>%\n  kable_styling(\n    font_size = 16,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  ) %>%\nscroll_box()\n```\n:::\n\n::: {.column width=\"50%\"}\n### 📝 Input in Text\n\n```{r}\n#| echo: false\n\nkable(head(example_data_text), format = \"html\") %>%\n  kable_styling(\n    font_size = 16,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  ) %>%\nscroll_box()\n```\n:::\n:::\n\n## Which to use? 🤔\n\nBoth! 🥳\n\n## Example - Output in utilities?🤔\n\n::: columns\n::: {.column width=\"60%\"}\n```{r}\n#| echo: true\n#| eval: true\n\nlibrary(MHQoL)\n\n# Prepare input: 7 MHQoL dimensions\ndimensions <- example_data_scores[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")]\n\n# Calculate total utility score (Netherlands value set)\nmhqol_utility <- mhqol(\n  dimensions = dimensions,\n  country = \"Netherlands\",   # 🇳🇱 Default option\n  metric = \"total\",          # \"total\" or \"average\"\n  ignore_invalid = TRUE,     # Skip incomplete rows\n  ignore_NA = FALSE          # Stop if NAs are present\n)\n\n```\n:::\n\n::: {.column width=\"40%\"}\n```{r}\n#| echo: false\nlibrary(kableExtra)\n\nkable(head(mhqol_utility), format = \"html\") %>%\n  kable_styling(\n    font_size = 18,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  )\n```\n:::\n:::\n\n## Example - Output in scores?🤔\n\n::: columns\n::: {.column width=\"60%\"}\n```{r}\n#| echo: true\n#| eval: true\n\nlibrary(MHQoL)\n\n# Prepare input: 7 MHQoL dimensions\ndimensions <- example_data_text[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")] #Input from the text dataframe\n\n# Calculate total utility score (Netherlands value set)\nmhqol_LSS <- mhqol_LSS(\n  dimensions = dimensions,\n  metric = \"total\",          # \"total\" or \"average\"\n  ignore_invalid = TRUE,     # Skip incomplete rows\n  ignore_NA = FALSE          # Stop if NAs are present\n)\n\n```\n:::\n\n::: {.column width=\"40%\"}\n```{r}\n#| echo: false\nlibrary(kableExtra)\n\nkable(head(mhqol_LSS), format = \"html\") %>%\n  kable_styling(\n    font_size = 18,\n    bootstrap_options = c(\"striped\", \"hover\"),\n    full_width = FALSE\n  )\n```\n:::\n:::\n\n## Or if you want to have use an Interface (from Shiny): the MHQoL cooker👩‍🍳\n\n<iframe src=\"https://stijnbpeeters.shinyapps.io/MHQoL-Tool/\" width=\"100%\" height=\"600px\" style=\"border:none;\">\n\n</iframe>\n\n::: :::\n\n## 📈 The actual work starts: run the Psychometric Analysis in R\n\n::: columns\n::: {.column width=\"65%\"}\n1.  **Internal Consistency**\n    -   Cronbach’s Alpha\n2.  **Construct Validity**\n    -   Measurement invariance test\n    -   Spearman’s Rank Correlation Coefficients\n    -   Multilevel Regression Analyses\n3.  **Convergent Validity**\n    -   Spearman’s Rank Correlation Coefficients\n:::\n\n::: {.column width=\"35%\"}\n![](https://preview.redd.it/starting-a-new-hobby-v0-2dnsyjxmd3qa1.png?width=640&crop=smart&auto=webp&s=bbd84f2849b718c8901cdb628d9c47fa59ee892f)\n:::\n:::\n\n## Internal Consistency using the `ltm` package\n\n::: columns\n::: {.column width=\"40%\"}\n**⚙️ How We Used It**\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(ltm)\n\n# Select MHQoL dimensions (7 items)\ndimensions <- example_data_scores[, c(\"SI\", \"IN\", \"MO\", \"RE\", \"DA\", \"PH\", \"FU\")]\n\n# Compute Cronbach’s Alpha\ncronbach.alpha(dimensions)\n```\n:::\n\n::: {.column width=\"60%\"}\n**🧠 Why we used it?**\n\n-   Simple and **dedicated function** for Cronbach’s Alpha\n-   Integrated in a package already suited for **psychometric analysis**\n-   Output includes:\n    -   Overall alpha\n    -   **Item-total correlations**\n    -   Effect of removing each item\n-   Ideal for Likert-style or binary questionnaire items\n-   Lightweight and easy to interpret — perfect for streamlined reporting\n:::\n:::\n\n## 🔍 Measurement invariance - Why Test Measurement Invariance?\n\n::: columns\n::: {.column width=\"55%\"}\n...\n\n**🧠 Purpose**\n\n-   Ensure **MHQoL measures the same construct** across groups\\\n-   Without it, **comparisons may be biased or invalid** ...\n\n**🔬 Invariance Levels**\n\n1.  **Configural**: Same structure\\\n2.  **Metric**: Equal loadings\\\n3.  **Scalar**: Equal loadings + intercepts\\\n4.  *(Optional)* **Residual**: Equal residual variances\n:::\n\n::: {.column width=\"45%\"}\n![](https://okan.cloud/posts/2020-12-21-testing-for-measurement-invariance-in-r/mi2.jpg)\n:::\n:::\n\n-   Each step **adds constraints** and tests whether the model still fits well.\n\n## ✅ Sow we Tested it in R (lavaan)\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(lavaan)\n\n# Latent model: 1 factor with 7 observed MHQoL items\nmodel <- '\n  MHQoL =~ SI + IN + MO + RE + DA + PH + FU\n'\n\n# 1. Configural invariance\nfit_config <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE)\n\n# 2. Metric invariance (equal loadings)\nfit_metric <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = \"loadings\")\n\n# 3. Scalar invariance (equal loadings + intercepts)\nfit_scalar <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = c(\"loadings\", \"intercepts\"))\n\n# Compare model fits\nanova(fit_config, fit_metric, fit_scalar)\n```\n\n## 📊 Comparing Invariance Models\n\n| Model          | CFI  | RMSEA | SRMR |\n|----------------|------|-------|------|\n| Configural     | 0.99 | 0.04  | 0.06 |\n| Metric         | 0.99 | 0.04  | 0.07 |\n| Scalar         | 0.96 | 0.10  | 0.07 |\n| Partial scalar | 0.99 | 0.03  | 0.06 |\n\nPartial scalar: free some intercepts, for example\n\n```{r}\n#| echo: true\n#| eval: false\n\nfit_part_scalar <- cfa(model, data = df, group = \"group_var\",\n                  estimator = \"WLSMV\", ordered = TRUE,\n                  group.equal = c(\"loadings\", C(\"SI|T1\", \"IN|T2\")))\n\n```\n\n## 🔗 Spearman’s Rank Correlation Coefficients\n\n::: columns\n::: {.column width=\"55%\"}\n**🧠 Purpose**\n\n-   Assess **convergent validity** between MHQoL and related health measures\n-   **Spearman’s rank correlation** is:\n    -   Non-parametric\n    -   Based on **ranked values**\n    -   Ideal for **ordinal** or **non-normal** data\n:::\n\n::: {.column width=\"45%\"}\n-   ✅ In R, correlation methods are available with `cor.test()` (also for pearson)\n\n...\n\n📌 Example Use Cases: MHQoL vs. EQ-5D\n\n```{r}\n#| echo: true\n#| eval: false\n\n\n# Pearson\ncor.test(x = mhqol_score, y = eq5d_score, method = \"pearson\")\n\n# Spearman\ncor.test(x = mhqol_score, y = eq5d_score, method = \"spearman\")\n```\n:::\n:::\n\n## 📊 Example output correlations with MHQoL Score\n\n| Variable           | Spearman’s ρ | p-value  |\n|--------------------|--------------|----------|\n| EQ-5D LSS          | 0.62         | \\< 0.001 |\n| WHO-5 Wellbeing    | 0.58         | \\< 0.001 |\n| PHQ-9 (depression) | -0.55        | \\< 0.001 |\n\n## Last step👣: Multilevel regression\n\n::: columns\n::: {.column width=\"55%\"}\n**🌍 Data Structure**\n\n-   Individuals are **nested within countries**\\\n-   Ignoring this would violate **independence assumptions**\n\n...\n\n**🎯 Research Questions**\n\n1.  Do MHQoL dimensions predict **self-reported mental QoL (MHQoL-VAS)?**\n2.  Do EQ-5D-5L dimensions explain **mental QoL differences**?\n\n...\n\n**📐 Methodological Approach**\n\n-   Used **multilevel regression** to account for hierarchy\\\n-   Included:\n    -   Fixed effects for predictors\n    -   Covariates: **age** and **gender** (*sex assigned at birth*)\n:::\n\n::: {.column width=\"45%\"}\n...\n\n**🧪 Compared two model types:**\n\n1.  **Random Intercept Model**\\\n    – Intercepts vary across countries\n\n2.  **Random Intercept + Slope Model**\\\n    – Both intercepts and slopes vary across countries\n\n...\n\n**✅** Likelihood ratio test\\*\\* favored **random intercept only**\n:::\n:::\n\n## How it was done in R\n\n```{r}\n#| echo: true\n#| eval: false\n\nlibrary(lme4)\n\n# Random intercept model: MHQoL dimensions → MHQoL-VAS\nmodel1 <- lmer(\n  mhqol_vas ~ SI + IN + MO + RE + DA + PH + FU +\n  age + gender + (1 | country),\n  data = example_data_scores\n)\n\n# Random intercept + slope model (example: FU varies by country)\nmodel2 <- lmer(\n  mhqol_vas ~ SI + IN + MO + RE + DA + PH + FU +\n  age + gender + (FU | country),\n  data = example_data_scores\n)\n\n# Compare models\nanova(model1, model2)\n\n# Model performance\nsummary(model1)\n```\n\n## ✅ Key Takeaways\n\n-   🧠 **R provides a complete psychometric workflow**, from internal consistency to measurement invariance and multilevel modeling\n\n-   📦 We used specialized packages:\n\n    -   `ltm` for **Cronbach’s Alpha**\n    -   `lavaan` for **Confirmatory Factor Analysis** and **Measurement Invariance**\n    -   `lme4` for **Multilevel Regression**\n\n-   🧰 We developed the **MHQoL R package** and **Shiny app**:\n\n    -   Standardized scoring\n    -   Enhances **reproducibility** and **ease of use**\n\n-   🎯 Together, these tools support both **rigorous evaluation** and **practical implementation** of mental health QoL measures\n\n## Any Questions?\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","css":["styles.css"],"highlight-style":"github","incremental":true,"output-file":"RforHTA-MHQoL.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.553","auto-stretch":true,"editor":"visual","title":"Measuring Mental Health Quality of Life in R: A Psychometric Evaluation and Standardised MHQoL Toolbox","logo":"data/eshpm-logo.jpg","scrollable":true,"slideNumber":true,"transition":"fade","chalkboard":true,"center":true}}},"projectFormats":[]}